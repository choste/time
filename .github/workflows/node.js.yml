# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ['main']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: file:./dev.db
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: npm ci
      - run: npx playwright install
      - run: npm run build --if-present
      - run: npm run prisma migrate deploy
      - run: npm test
      - run: npm run lint
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        id: container
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: yq - portable yaml processor
        uses: mikefarah/yq@v4.35.1
        with:
          cmd: yq -i '.spec.containers[0].image = "ghcr.io/choste/time@${{ steps.container.outputs.digest }}"' 'manifests/pod.yaml'
      - uses: EndBug/add-and-commit@v9
        with:
          message: '[skip ci] update image digest'
          default_author: github_actions
